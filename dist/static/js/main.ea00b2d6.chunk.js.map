{"version":3,"sources":["components/layout/SignedInLinks.js","strore/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","strore/actions/projectActions.js","App.js","serviceWorker.js","strore/reducers/authReducer.js","strore/reducers/projectReducer.js","strore/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","profile","className","to","onClick","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","className-","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleChange","setState","target","value","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SigniUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","SignUp","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ea00b2d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../../strore/actions/authActions';\r\nconst SignedInLinks = (props) => {\r\n    const {profile} = props;\r\n    return (\r\n        <div>\r\n            <ul className=\"right\">\r\n                <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n                <li><a to=\"/\" onClick={props.signOut}>Logout</a></li>\r\n    <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{profile.initials}</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: ()=> {\r\n            dispatch(signOut())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email, \r\n            credentials.password\r\n        ).then(()=> {\r\n            dispatch(\r\n                {\r\n                    type: 'LOGIN_SUCCESS'\r\n                }\r\n            )\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'LOGIN_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({\r\n                type: 'SIGNOUT_SUCCESS'\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        debugger;\r\n        const firestore = getFirestore();\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email, \r\n            newUser.password\r\n        ).then((resp)=> {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch(\r\n                {\r\n                    type: 'SIGNUP_SUCCESS'\r\n                }\r\n            )\r\n        }).catch((err) => {\r\n            dispatch({\r\n                type: 'SIGNUP_ERROR',\r\n                err\r\n            })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <div>\r\n            <ul className=\"right\">\r\n                <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\r\n                <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux';\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    console.log('auth', props)\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Game</Link>\r\n                {links}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props;\r\n    return (\r\n        <div className-=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        { \r\n                            notifications && notifications.map(item =>{\r\n                                return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        { moment(item.time.toDate()).fromNow() }\r\n                                    </div>\r\n                                </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react'\r\nimport moment from 'moment';\r\nexport default function ProjectSummary({project}) {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n    <span className=\"card-title\">{project.title}</span>\r\n    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n    <p className=\"grey-text\">{moment(project.createAt.toDate()).calendar()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport {Link} from 'react-router-dom';\r\nconst ProjectList = ({projects}) => {\r\n    console.log('project', projects);\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {\r\n                projects && projects.map(project => {\r\n                    return (\r\n                        <Link to={'/project/'+project.id} key={project.id}>\r\n                            <ProjectSummary project={project}></ProjectSummary>\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {compose} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport {Redirect} from 'react-router-dom'\r\nexport class Dashboard extends Component {\r\n    render() {\r\n        const {project, auth, notifications} = this.props;\r\n        \r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={project}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        project: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ])\r\n)(Dashboard)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport { compose} from 'redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment';\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props;\r\n    console.log('auth', auth);\r\n    if(!auth.uid) return <Redirect to='/signin' />\r\n    if(project){\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                    <div>{moment(project.createAt.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <p>Loading</p>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        {\r\n            collection: 'projects'\r\n        }\r\n    ])\r\n)(ProjectDetails)","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {signIn} from '../../strore/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const {authError, auth} = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink light-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {\r\n                            authError ? <p>{authError}</p> : null\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => {\r\n            dispatch(signIn(creds));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../strore/actions/authActions'\r\nimport {Redirect} from 'react-router-dom'\r\nclass SigniUp extends Component {\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const {auth, authError} = this.props;\r\n        if(auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink light-1 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {\r\n                            authError ? <p>{authError}</p> : null\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => {\r\n            dispatch(signUp(newUser))\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SigniUp)\r\n","import React, { Component } from 'react'\r\nimport {createProject} from '../../strore/actions/projectActions'\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom'\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const {auth} = this.props;\r\n        console.log('auth', auth);\r\n        if(!auth.uid) return <Redirect to='/signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea className=\"materialize-textarea\" id=\"content\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink light-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\r\n","export const createProject = (project) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        // make async call and dispatch()\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createAt: new Date()\r\n        }).then(()=>{\r\n            dispatch({\r\n                type: 'CREATE_PROJECT',\r\n                project\r\n            })\r\n        }).catch((err)=>{\r\n            dispatch({\r\n                type: 'CREATE_PROJECT_ERROR',\r\n                err\r\n            })\r\n        })\r\n\r\n    }\r\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar></Navbar>\n        <Switch>\n          <Route exact path=\"/\"  component={Dashboard}></Route>\n          <Route path=\"/project/:id\" component={ProjectDetails}></Route>\n          <Route path=\"/signin\" component={SignIn}></Route>\n          <Route path=\"/signup\" component={SignUp}></Route>\n          <Route path=\"/create\" component={CreateProject}></Route>\n          \n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\nconst authReducer = (state = initState, action) => {\r\n    switch(action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('Login failed');\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log('Login success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('SIGNUP Success');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n            case 'SIGNUP_ERROR':\r\n                console.log('SIGNUP failed');\r\n                return {\r\n                    ...state,\r\n                    authError: action.err.message\r\n                }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('SIGN OUT Success');\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n      ]\r\n}\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('Created Project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('Created Project Error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer;","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer'\r\nimport {combineReducers} from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport { firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer ,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyB1cTNKcaAHmssTVAXS2VtKcTfDZqf5RUE\",\r\n    authDomain: \"net-ninja-mario-plan-1f3bf.firebaseapp.com\",\r\n    databaseURL: \"https://net-ninja-mario-plan-1f3bf.firebaseio.com\",\r\n    projectId: \"net-ninja-mario-plan-1f3bf\",\r\n    storageBucket: \"net-ninja-mario-plan-1f3bf.appspot.com\",\r\n    messagingSenderId: \"420244489408\",\r\n    appId: \"1:420244489408:web:1f4a46efbcd2a5585f1925\",\r\n    measurementId: \"G-TN5VD2NTHD\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n//   firebase.analytics();\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './strore/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {reduxFirestore, getFirestore} from 'redux-firestore'\nimport {reactReduxFirebase,  getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}),\n    reduxFirestore(fbConfig)\n  )\n  );\n\nstore.firebaseAuthIsReady.then(()=> {\n  ReactDOM.render(\n    <Provider store={store}>\n      <React.StrictMode>\n        <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n  );\n  \n  // If you want your app to work offline and load faster, you can change\n  // unregister() to register() below. Note this comes with some pitfalls.\n  // Learn more about service workers: https://bit.ly/CRA-PWA\n  serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}